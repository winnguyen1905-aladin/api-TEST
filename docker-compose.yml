version: '3.8'

# ================================
# Development Environment
# Simpler setup for local development
# ================================

services:
  # Redis only (minimal setup)
  redis:
    image: redis:7-alpine
    container_name: aladin-redis-prod
    command: redis-server --appendonly yes --appendfsync everysec
    ports:
      - "6379:6379"
    volumes:
      - redis-dev-data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro  # ‚Üê Mount config file
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - aladin-network

  # Redis Commander (Web UI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: aladin-redis-commander-prod
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - aladin-network

  # PostgreSQL (optional)
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: chat-postgres-dev
  #   environment:
  #     POSTGRES_DB: chat_db
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres-dev-data:/var/lib/postgresql/data
  #     - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U postgres"]
  #     interval: 10s
  #     timeout: 3s
  #     retries: 3
  #   networks:
  #     - chat-dev

networks:
  aladin-network:
    driver: bridge

volumes:
  redis-dev-data:
  postgres-dev-data:

