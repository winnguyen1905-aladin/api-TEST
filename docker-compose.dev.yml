version: '3.8'

# ================================
# Development Environment
# Redis + optional services
# Backend runs natively with: npm run dev
# ================================

services:
  # Redis - Cache & Message Queue
  redis:
    image: redis:7-alpine
    container_name: aladin-redis-dev
    command: redis-server --appendonly yes --appendfsync everysec
    ports:
      - "6379:6379"
    volumes:
      - redis-dev-data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    restart: unless-stopped
    networks:
      - dev-network

  # Redis Commander - Web UI (optional)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: aladin-redis-commander-dev
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - dev-network
    restart: unless-stopped
    profiles:
      - debug  # Only start with: docker-compose --profile debug up

networks:
  dev-network:
    driver: bridge

volumes:
  redis-dev-data:
    driver: local

# ================================
# Usage:
# 
# Start Redis only:
#   docker-compose up -d redis
# 
# Start with Redis Commander (debug):
#   docker-compose --profile debug up -d
# 
# Stop all:
#   docker-compose down
# 
# View logs:
#   docker-compose logs -f redis
# 
# ================================


